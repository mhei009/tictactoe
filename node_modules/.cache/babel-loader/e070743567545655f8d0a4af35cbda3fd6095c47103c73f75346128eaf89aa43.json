{"ast":null,"code":"var _jsxFileName = \"/Users/mhei/Desktop/react/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  highlight\n}) {\n  let squareStyle = {\n    color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\"\n  };\n  if (highlight) {\n    // Apply additional styling for highlighted squares (e.g., background color)\n    squareStyle.backgroundColor = \"#FFD700\"; // Use your desired highlight color\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    style: squareStyle,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winnerInfo = calculateWinner(squares);\n  const winningLine = winnerInfo.winningLine;\n  function renderSquare(i, highlight) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onSquareClick: () => handleClick(i),\n      highlight: highlight\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  function handleClick(i) {\n    if (squares[i] || winnerInfo.winner) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  let status;\n  if (winnerInfo.winner) {\n    status = \"Winner: \" + winnerInfo.winner;\n  } else {\n    status = \"Player \" + (xIsNext ? \"X\" : \"O\") + \"'s turn\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const index = row * 3 + col;\n        const highlight = winningLine && winningLine.includes(index);\n        return renderSquare(index, highlight);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Move #\" + move;\n    } else {\n      description = \"Start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","highlight","squareStyle","color","backgroundColor","className","onClick","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winnerInfo","calculateWinner","winningLine","renderSquare","i","handleClick","winner","nextSquares","slice","status","map","row","col","index","includes","_c2","lines","length","a","b","c","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","_c3","$RefreshReg$"],"sources":["/Users/mhei/Desktop/react/tictactoe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick, highlight }) {\n  let squareStyle = {\n    color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\",\n  };\n\n  if (highlight) {\n    // Apply additional styling for highlighted squares (e.g., background color)\n    squareStyle.backgroundColor = \"#FFD700\"; // Use your desired highlight color\n  }\n\n  return (\n    <button className=\"square\" onClick={onSquareClick} style={squareStyle}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winnerInfo = calculateWinner(squares);\n  const winningLine = winnerInfo.winningLine;\n\n  function renderSquare(i, highlight) {\n    return (\n      <Square\n        key={i}\n        value={squares[i]}\n        onSquareClick={() => handleClick(i)}\n        highlight={highlight}\n      />\n    );\n  }\n\n  function handleClick(i) {\n    if (squares[i] || winnerInfo.winner) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  let status;\n  if (winnerInfo.winner) {\n    status = \"Winner: \" + winnerInfo.winner;\n  } else {\n    status = \"Player \" + (xIsNext ? \"X\" : \"O\") + \"'s turn\";\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].map((row) => (\n        <div className=\"board-row\" key={row}>\n          {[0, 1, 2].map((col) => {\n            const index = row * 3 + col;\n            const highlight = winningLine && winningLine.includes(index);\n            return renderSquare(index, highlight);\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Move #\" + move;\n    } else {\n      description = \"Start\";\n    }\n    return (\n      <li key={move}>\n        <button className=\"button\" onClick={() => jumpTo(move)}>\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}