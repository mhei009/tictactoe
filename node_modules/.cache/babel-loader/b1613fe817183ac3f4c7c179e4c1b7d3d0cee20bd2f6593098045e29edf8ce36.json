{"ast":null,"code":"var _jsxFileName = \"/Users/mhei/Desktop/react/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winnerInfo = calculateWinner(squares);\n  const winningLine = winnerInfo.winningLine;\n  function renderSquare(i, highlight) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onSquareClick: () => handleClick(i),\n      highlight: highlight\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  function Square({\n    value,\n    onSquareClick,\n    highlight\n  }) {\n    let squareStyle = {\n      color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\"\n    };\n    if (highlight) {\n      // Apply additional styling for highlighted squares (e.g., background color)\n      squareStyle.backgroundColor = \"#FFD700\"; // Use your desired highlight color\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: onSquareClick,\n      style: squareStyle,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  function handleClick(i) {\n    if (squares[i] || winnerInfo.winner) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  let status;\n  if (winnerInfo.winner) {\n    status = \"Winner: \" + winnerInfo.winner;\n  } else {\n    status = \"Player \" + (xIsNext ? \"X\" : \"O\") + \"'s turn\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const index = row * 3 + col;\n        const highlight = winningLine && winningLine.includes(index);\n        return renderSquare(index, highlight);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Move #\" + move;\n    } else {\n      description = \"Start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c2 = Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["Board","xIsNext","squares","onPlay","winnerInfo","calculateWinner","winningLine","renderSquare","i","highlight","_jsxDEV","Square","value","onSquareClick","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","squareStyle","color","backgroundColor","className","onClick","style","children","winner","nextSquares","slice","status","_Fragment","map","row","col","index","includes","_c","lines","length","a","b","c","Game","_s","history","setHistory","useState","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","_c2","$RefreshReg$"],"sources":["/Users/mhei/Desktop/react/tictactoe/src/App.js"],"sourcesContent":["function Board({ xIsNext, squares, onPlay }) {\n  const winnerInfo = calculateWinner(squares);\n  const winningLine = winnerInfo.winningLine;\n\n  function renderSquare(i, highlight) {\n    return (\n      <Square\n        key={i}\n        value={squares[i]}\n        onSquareClick={() => handleClick(i)}\n        highlight={highlight}\n      />\n    );\n  }\n\n  function Square({ value, onSquareClick, highlight }) {\n    let squareStyle = {\n      color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\",\n    };\n\n    if (highlight) {\n      // Apply additional styling for highlighted squares (e.g., background color)\n      squareStyle.backgroundColor = \"#FFD700\"; // Use your desired highlight color\n    }\n\n    return (\n      <button className=\"square\" onClick={onSquareClick} style={squareStyle}>\n        {value}\n      </button>\n    );\n  }\n\n  function handleClick(i) {\n    if (squares[i] || winnerInfo.winner) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  let status;\n  if (winnerInfo.winner) {\n    status = \"Winner: \" + winnerInfo.winner;\n  } else {\n    status = \"Player \" + (xIsNext ? \"X\" : \"O\") + \"'s turn\";\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].map((row) => (\n        <div className=\"board-row\" key={row}>\n          {[0, 1, 2].map((col) => {\n            const index = row * 3 + col;\n            const highlight = winningLine && winningLine.includes(index);\n            return renderSquare(index, highlight);\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Move #\" + move;\n    } else {\n      description = \"Start\";\n    }\n    return (\n      <li key={move}>\n        <button className=\"button\" onClick={() => jumpTo(move)}>\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}