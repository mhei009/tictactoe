{"ast":null,"code":"var _jsxFileName = \"/Users/mhei/Desktop/react/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Strike from \"./component/strike\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  const squareStyle = {\n    color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    style: squareStyle,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  strikeClass\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else if (squares.every(square => square)) {\n    status = \"It's a Draw!!!\";\n  } else {\n    status = `Player ${xIsNext ? \"X\" : \"O\"}'s turn`;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(i => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onSquareClick: () => handleClick(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [3, 4, 5].map(i => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onSquareClick: () => handleClick(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [[6, 7, 8].map(i => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onSquareClick: () => handleClick(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Strike, {\n        strikeClass: strikeClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (const [a, b, c] of lines) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [strikeClass, setStrikeClass] = useState(\"strike-row-1\");\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares]);\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    const winner = calculateWinner(nextSquares);\n    if (winner) {\n      // Set strike class based on the winner\n      setStrikeClass(`strike-${winner.toLowerCase()}`);\n    }\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => jumpTo(move),\n      children: move === 0 ? \"Start\" : `Move #${move}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, move, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        strikeClass: strikeClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"OtlNVUuIPW8qpQi+lawmY6s84A4=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","Strike","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","squareStyle","color","className","onClick","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","strikeClass","handleClick","i","calculateWinner","nextSquares","slice","winner","status","every","square","map","_c2","lines","a","b","c","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","setStrikeClass","handlePlay","nextHistory","concat","length","toLowerCase","jumpTo","nextMove","moves","move","_c3","$RefreshReg$"],"sources":["/Users/mhei/Desktop/react/tictactoe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Strike from \"./component/strike\";\n\nfunction Square({ value, onSquareClick }) {\n  const squareStyle = {\n    color: value === \"X\" ? \"#FF5733\" : \"#04D9FF\",\n  };\n\n  return (\n    <button className=\"square\" onClick={onSquareClick} style={squareStyle}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, strikeClass }) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else if (squares.every((square) => square)) {\n    status = \"It's a Draw!!!\";\n  } else {\n    status = `Player ${xIsNext ? \"X\" : \"O\"}'s turn`;\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {[0, 1, 2].map((i) => (\n          <Square\n            key={i}\n            value={squares[i]}\n            onSquareClick={() => handleClick(i)}\n          />\n        ))}\n      </div>\n      <div className=\"board-row\">\n        {[3, 4, 5].map((i) => (\n          <Square\n            key={i}\n            value={squares[i]}\n            onSquareClick={() => handleClick(i)}\n          />\n        ))}\n      </div>\n      <div className=\"board-row\">\n        {[6, 7, 8].map((i) => (\n          <Square\n            key={i}\n            value={squares[i]}\n            onSquareClick={() => handleClick(i)}\n          />\n        ))}\n        <Strike strikeClass={strikeClass} />\n      </div>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (const [a, b, c] of lines) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [strikeClass, setStrikeClass] = useState(\"strike-row-1\");\n\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares]);\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n\n    const winner = calculateWinner(nextSquares);\n    if (winner) {\n      // Set strike class based on the winner\n      setStrikeClass(`strike-${winner.toLowerCase()}`);\n    }\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => (\n    <li key={move}>\n      <button className=\"button\" onClick={() => jumpTo(move)}>\n        {move === 0 ? \"Start\" : `Move #${move}`}\n      </button>\n    </li>\n  ));\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          onPlay={handlePlay}\n          strikeClass={strikeClass}\n        />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}